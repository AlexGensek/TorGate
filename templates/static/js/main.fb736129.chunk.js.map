{"version":3,"sources":["components/MessageList/index.module.css","components/UserHeader/index.module.css","components/RoomHeader/index.module.css","components/WelcomeScreen/index.module.css","components/ChatList/index.module.css","components/CreateMessageForm/index.module.css","components/Message/index.module.css","components/AddContactForm/index.module.css","components/UserHeader/index.js","components/RoomHeader/index.js","components/WelcomeScreen/index.js","components/ChatList/index.js","components/CreateMessageForm/index.js","components/Message/index.js","components/MessageList/index.js","protocol.js","components/AddContactForm/index.js","View.js","App.js","index.js"],"names":["module","exports","UserHeader","onion","onClick","className","style","component","RoomHeader","current","state","actions","setSidebar","setUserList","username","WelcomeScreen","role","viewBox","d","ChatList","user","contacts","messages","map","contact","disabled","e","setContact","CreateMessageForm","socket","sendMessage","getUserMessages","onSubmit","preventDefault","message","target","value","trim","length","placeholder","type","xlinkHref","Message","this","props","msg","direction","timestamp","properties","React","Component","emptyList","empty","MessageList","id","reverse","m","commands","Object","freeze","ADD_USER","GET_USERS","GET_USER_MESSAGES","NEW_USER_MESSAGE","SEND_USER_MESSAGE","AddContactForm","submit","required","View","myOnion","setUser","setState","scrollToEnd","joinRoom","room","setRoom","subscribeToRoom","setCursor","keys","pop","roomSubscriptions","roomId","hooks","onMessage","addMessage","createRoom","options","then","createConvo","exists","rooms","find","x","name","addUserIds","private","addUserToRoom","userId","removeUserFromRoom","leaveRoom","position","setReadCursor","parseInt","forceUpdate","payload","messageId","prevState","readCursor","showNotification","runCommand","command","invite","remove","leave","split","args","slice","exec","catch","console","log","setTimeout","elem","document","querySelector","scrollTop","window","senderId","visibilityState","Notification","sender","body","text","icon","avatarURL","addEventListener","focus","addUser","emit","getUsers","io","on","timer","setInterval","addContactModalShow","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb736129.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"MessageList_component__T1NsJ\",\"empty\":\"MessageList_empty__3_q-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"UserHeader_component__20QYx\",\"pulse\":\"UserHeader_pulse__22NGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"RoomHeader_component__2p9iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"WelcomeScreen_component__3yqm3\",\"pulse\":\"WelcomeScreen_pulse__1-ohf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ChatList_component__2VSoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CreateMessageForm_component__35sSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Message_component__3zNqu\",\"online\":\"Message_online__X-RT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"AddContactForm_component__dAtTw\"};","import React from 'react'\nimport style from './index.module.css'\n\nexport const UserHeader = ({onion, onClick}) => (\n    <header className={style.component}>\n        {/*<img src={onioin.avatarURL || placeholder} alt={onioin} />*/}\n        <div>\n            <h3>Share to start chat:</h3>\n            <h5>{onion && `${onion}`}</h5>\n        </div>\n    </header>\n)\n","import React from 'react'\nimport style from './index.module.css'\n\nexport const RoomHeader = ({\n  state: {current},\n  actions: { setSidebar, setUserList },\n}) => (\n        <header className={style.component}>\n            {current && <h1>{current.username}</h1>}\n        </header>\n)\n","import React from 'react'\nimport style from './index.module.css'\n\nexport const WelcomeScreen = () => (\n  <section>\n    <div className={style.component}>\n      <span role=\"img\" aria-label=\"post\">\n        <svg viewBox=\"0 0 59 80\">\n          <g>\n            <path d=\"M48.417 49.444L38.585 73.229 36.012 71.394 41.802 56.726 31.211 59.519C31.211 59.519 26.022 42.42 26.513 30.837 26.218 22.744 27.644 16.96 30.167 13.6 34.274 8.408 42.099 3.953 49.793 7.645 54.701 9.869 57.658 13.889 58.107 17.824 59.479 34.859 38.498 41.817 38.498 41.817L38.085 38.191C38.085 38.191 44.945 35.464 49.105 29.553 53.266 23.643 51.245 15.88 46.569 14.464 42.061 13.577 37.34 18.757 36.516 27.966 34.721 41.776 39.393 52.006 39.393 52.006L48.417 49.444M0 62.396L15.402 74.372 16.522 71.783 8.26 65.71 16.853 63.305C16.853 63.305 10.998 47.535 10.597 32.251 10.229 27.354 9.896 11.684 15.924 8.975 16.976 7.213 18.743 5.903 18.743 5.903 18.743 5.903 3.467 4.584 4.184 32.453 5.706 51.166 9.451 59.821 9.451 59.821L0 62.396\" />\n            <path d=\"M29.91,61.761 L38.969,59.263 L30.045,80 L11.998,66.538 L19.098,64.644 C19.098,64.644 3.276,20.694 21.128,5.095 C32.325,-3.789 43.164,3.999 42.965,4.872 C40.203,4.812 37.842,5.844 37.842,5.844 C37.842,5.844 31.789,3.265 27.475,12.503 C23.719,20.705 22.048,34.474 29.91,61.761\" />\n            <path d=\"M41.806,17.606 C42.599,24.356 38.244,27.206 38.244,27.206 L37.819,30.659 C37.819,30.659 47.709,25.549 45.669,15.819 C44.566,15.913 42.212,17.242 41.806,17.606\" />\n          </g>\n        </svg>\n      </span>\n      <p>\n        Security communication is easy\n        <br />\n        fetch messages using Tor.\n      </p>\n    </div>\n  </section>\n)\n","import React from 'react'\nimport style from './index.module.css'\n\nexport const ChatList = ({\n                             user,\n                             contacts = [],\n                             messages,\n                             current,\n                             actions\n                         }) => (\n    <ul className={style.component}>\n        {contacts.map(contact => {\n            // const messageKeys = Object.keys(messages[contact.onion] || {});\n            // const latestMessage =\n            //     messageKeys.length > 0 && messages[contact.onion][messageKeys.pop()]\n\n            return (\n                <li\n                    key={contact.onion}\n                    disabled={contact.onion === current.onion}\n                    onClick={e => actions.setContact(contact)}\n                    // style={{ order }} FIXME\n                >\n                    <col->\n                        <p>{contact.username}</p>\n                        {/*<span>{latestMessage && latestMessage.text}</span>*/}\n                    </col->\n                </li>\n            )\n        })}\n    </ul>\n)\n","import React from 'react'\nimport style from './index.module.css'\n\nexport const CreateMessageForm = ({\n                                      state: {socket, current},\n                                      actions: {getUserMessages, sendMessage},\n                                  }) => (\n    (\n        <form\n            className={style.component}\n            onSubmit={e => {\n                e.preventDefault()\n\n                const message = e.target[0].value.trim()\n                if (message.length === 0) {\n                    return\n                }\n\n                e.target[0].value = ''\n\n                sendMessage(socket, current.onion, message);\n            }}\n        >\n            <input\n                placeholder=\"Type a Message..\"\n            />\n            <button type=\"submit\">\n                <svg>\n                    <use xlinkHref=\"index.svg#send\"/>\n                </svg>\n            </button>\n        </form>\n    )\n)\n","import React from 'react'\nimport style from './index.module.css'\nimport Linkify from 'react-linkify'\n\nexport class Message extends React.Component {\n    render() {\n        const contact = this.props.contact;\n        const msg = this.props.message;\n        return (\n            this.props.message && (\n                <li key={msg.timestamp} className={style.component}>\n                    <div>\n                        <span> <b>{(msg.direction === 0) ? contact.username : \"Me\"}</b> </span>\n                        <span>{msg.timestamp}</span>\n                        <p>\n                            <Linkify properties={{target: '_blank'}}>{msg.message}</Linkify>\n                        </p>\n                    </div>\n                </li>\n            )\n        )\n    }\n}\n","import React from 'react'\nimport style from './index.module.css'\nimport {Message} from '../Message'\n\nconst emptyList = (\n    <div className={style.empty}>\n    <span role=\"img\" aria-label=\"post\">\n      📝\n    </span>\n        <h2>No Messages Yet</h2>\n        <p>Be the first to post in this room or invite someone to join the room</p>\n    </div>\n)\n\nexport const MessageList = ({messages, contact}) => {\n    return (\n        <ul id=\"messages\" className={style.component}>\n            {messages ? (\n                <wrapper->\n                    {\n                        messages && messages.reverse().map(m => <Message message={m} contact={contact}/>)\n                    }\n                </wrapper->\n            ) : (\n                emptyList\n            )}\n        </ul>\n    )\n}\n","export const commands = Object.freeze({\n    ADD_USER: \"ADD_USER\",\n    GET_USERS: \"GET_USERS\",\n    GET_USER_MESSAGES: \"GET_USER_MESSAGES\",\n    NEW_USER_MESSAGE: \"NEW_USER_MESSAGE\",\n    SEND_USER_MESSAGE: \"SEND_USER_MESSAGE\"\n});","import React from 'react'\nimport style from './index.module.css'\n\nexport const AddContactForm = ({ submit }) => (\n  <form\n    className={style.component}\n    onSubmit={e => {\n      e.preventDefault()\n      submit({\n        onion: e.target[0].value\n      })\n      e.target[0].value = ''\n    }}\n  >\n    <input placeholder=\"Add contact..\" type=\"text\" required />\n    <button type=\"submit\">\n      <svg>\n        <use xlinkHref=\"index.svg#add\" />\n      </svg>\n    </button>\n  </form>\n)\n","import React from 'react';\nimport io from 'socket.io-client';\nimport './index.css'\nimport {UserHeader} from \"./components/UserHeader\";\nimport {RoomHeader} from \"./components/RoomHeader\";\nimport {WelcomeScreen} from \"./components/WelcomeScreen\";\nimport {ChatList} from \"./components/ChatList\";\nimport {CreateMessageForm} from \"./components/CreateMessageForm\";\nimport {MessageList} from \"./components/MessageList\";\nimport {commands} from \"./protocol\";\nimport {AddContactForm} from \"./components/AddContactForm\";\n\nclass View extends React.Component {\n    state = {\n        myOnion: \"\",\n        messages: {}\n    }\n\n    actions = {\n        // --------------------------------------\n        // User\n        // --------------------------------------\n\n        setUser: user => this.setState({user}),\n\n        // --------------------------------------\n        // Room\n        // --------------------------------------\n\n        setContact: contact => {\n            this.setState({current: contact})\n            this.actions.scrollToEnd()\n        },\n\n        joinRoom: room => {\n            this.actions.setRoom(room)\n            this.actions.subscribeToRoom(room)\n            this.state.messages[room.id] &&\n            this.actions.setCursor(\n                room.id,\n                Object.keys(this.state.messages[room.id]).pop()\n            )\n        },\n\n        subscribeToRoom: room =>\n            !this.state.myOnion.roomSubscriptions[room.id] &&\n            this.state.myOnion.subscribeToRoom({\n                roomId: room.id,\n                hooks: {onMessage: this.actions.addMessage},\n            }),\n\n        createRoom: options =>\n            this.state.myOnion.createRoom(options).then(this.actions.joinRoom),\n\n        createConvo: options => {\n            if (options.user.id !== this.state.myOnion.id) {\n                const exists = this.state.myOnion.rooms.find(\n                    x =>\n                        x.name === options.user.id + this.state.myOnion.id ||\n                        x.name === this.state.myOnion.id + options.user.id\n                )\n                exists\n                    ? this.actions.joinRoom(exists)\n                    : this.actions.createRoom({\n                        name: this.state.myOnion.id + options.user.id,\n                        addUserIds: [options.user.id],\n                        private: true,\n                    })\n            }\n        },\n\n        addUserToRoom: ({userId, roomId = this.state.room.id}) =>\n            this.state.myOnion\n                .addUserToRoom({userId, roomId})\n                .then(this.actions.setRoom),\n\n        removeUserFromRoom: ({userId, roomId = this.state.room.id}) =>\n            userId === this.state.myOnion.id\n                ? this.state.myOnion.leaveRoom({roomId})\n                : this.state.myOnion\n                    .removeUserFromRoom({userId, roomId})\n                    .then(this.actions.setRoom),\n\n        // --------------------------------------\n        // Cursors\n        // --------------------------------------\n\n        setCursor: (roomId, position) =>\n            this.state.myOnion\n                .setReadCursor({roomId, position: parseInt(position)})\n                .then(x => this.forceUpdate()),\n\n        // --------------------------------------\n        // Messages\n        // --------------------------------------\n\n        addMessage: payload => {\n            const roomId = payload.room.id\n            const messageId = payload.id\n            // Update local message cache with new message\n            this.setState(prevState => ({\n                messages: {\n                    ...prevState.messages,\n                    [roomId]: {\n                        ...prevState.messages[roomId],\n                        [messageId]: payload\n                    }\n                }\n            }))\n            // Update cursor if the message was read\n            if (roomId === this.state.room.id) {\n                const cursor = this.state.myOnion.readCursor({roomId}) || {}\n                const cursorPosition = cursor.position || 0\n                cursorPosition < messageId && this.actions.setCursor(roomId, messageId)\n                this.actions.scrollToEnd()\n            }\n            // Send notification\n            this.actions.showNotification(payload)\n        },\n\n        runCommand: command => {\n            const commands = {\n                invite: ([userId]) => this.actions.addUserToRoom({userId}),\n                remove: ([userId]) => this.actions.removeUserFromRoom({userId}),\n                leave: ([userId]) =>\n                    this.actions.removeUserFromRoom({userId: this.state.myOnion.id}),\n            }\n            const name = command.split(' ')[0]\n            const args = command.split(' ').slice(1)\n            const exec = commands[name]\n            exec && exec(args).catch(console.log)\n        },\n\n        scrollToEnd: e =>\n            setTimeout(() => {\n                const elem = document.querySelector('#messages')\n                elem && (elem.scrollTop = 100000)\n            }, 0),\n\n        // --------------------------------------\n        // Notifications\n        // --------------------------------------\n\n        showNotification: message => {\n            if (\n                'Notification' in window &&\n                this.state.myOnion.id &&\n                this.state.myOnion.id !== message.senderId &&\n                document.visibilityState === 'hidden'\n            ) {\n                const notification = new Notification(\n                    `New Message from ${message.sender.id}`,\n                    {\n                        body: message.text,\n                        icon: message.sender.avatarURL,\n                    }\n                )\n                notification.addEventListener('click', e => {\n                    this.actions.joinRoom(message.room)\n                    window.focus()\n                })\n            }\n        },\n\n        addUser: (socket, onion) => {\n            socket.emit(commands.ADD_USER, onion);\n        },\n\n        getUsers: socket => {\n            socket.emit(commands.GET_USERS, {});\n        },\n\n        getUserMessages: (socket, onion) => {\n            onion && socket.emit(commands.GET_USER_MESSAGES, {onion: onion});\n        },\n\n        sendMessage: (socket, onion, message) => {\n            socket.emit(commands.SEND_USER_MESSAGE, {\n                onion: onion,\n                message: message\n            });\n        }\n    }\n\n\n    componentDidMount() {\n        const socket = io(`http://127.0.0.1:5000`); // FIXME\n        this.setState({socket: socket});\n        socket.on(commands.ADD_USER, (m) => {\n            console.log(\"add user\");\n        });\n        socket.on(commands.GET_USERS, (m) => {\n            const msg = m;\n            this.setState({\n                myOnion: msg.onion,\n                contacts: msg.contacts\n            });\n        });\n        socket.on(commands.GET_USER_MESSAGES, (m) => {\n            const msg = m;\n            const onion = msg.onion;\n            const messages = msg.messages;\n            this.setState(prevState => ({\n                messages: {\n                    ...prevState.messages,\n                    [onion]: messages\n                }\n            }))\n\n        });\n        socket.on(commands.NEW_USER_MESSAGE, (m) => {\n            console.log(\"new message\");\n        });\n        socket.on(commands.SEND_USER_MESSAGE, (m) => {\n            console.log(\"send message\");\n        });\n\n        this.timer = setInterval(() => {\n            this.actions.getUsers(socket);\n            this.state.current &&\n                this.actions.getUserMessages(socket, this.state.current.onion);\n            }, 1000);\n    }\n\n    componentWillUnmount() {\n        this.timer = null;\n    }\n\n    render() {\n        const {\n            myOnion,\n            current,\n            contacts,\n            messages,\n            socket\n        } = this.state\n        const {addUser} = this.actions\n\n        return (\n            <main>\n                <aside data-open={true}>\n                    <UserHeader onion={myOnion} onClick={() => this.setState({addContactModalShow:true})}/>\n                    <ChatList\n                        user={myOnion}\n                        contacts={contacts}\n                        messages={current && messages[current.onion]}\n                        current={current || {}}\n                        actions={this.actions}\n                    />\n                    <AddContactForm submit={(onion) => {\n                        addUser(socket, onion);\n                    }}/>\n\n                </aside>\n                <section>\n                    <RoomHeader state={this.state} actions={this.actions}/>\n                    {\n                        current ? (\n                                <row->\n                                    <col->\n                                        <MessageList\n                                            contact={current}\n                                            messages={current && messages[current.onion]}\n                                        />\n                                        <CreateMessageForm state={this.state} actions={this.actions}/>\n                                    </col->\n                                </row->) :\n                            <WelcomeScreen/>\n                    }\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default View;","import View from \"./View\";\n\nexport function App() {\n    return <View/>;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}